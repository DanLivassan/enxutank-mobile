{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Icon } from 'react-native-elements';\nimport SignIn from \"./screens/user/SignIn\";\nimport SignUp from \"./screens/user/SignUp\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var provider = function provider(_provider) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return [_provider, props];\n};\nexport var ProviderComposer = function ProviderComposer(_ref) {\n  var providers = _ref.providers,\n      children = _ref.children;\n\n  for (var i = providers.length - 1; i >= 0; --i) {\n    var _providers$i = _slicedToArray(providers[i], 2),\n        Provider = _providers$i[0],\n        props = _providers$i[1];\n\n    children = _jsx(Provider, _objectSpread(_objectSpread({}, props), {}, {\n      children: children\n    }));\n  }\n\n  return children;\n};\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(ProviderComposer, {\n    providers: [provider(RedacaoProvider), provider(TemaProvider), provider(NivelEscolaridadeProvider), provider(UserProvider), provider(AuthProvider)],\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"SignIn\",\n        screenOptions: screenOptions,\n        children: [_jsx(Stack.Screen, {\n          name: SignUp.name,\n          component: SignUp,\n          options: {\n            title: \"Registrar-se\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: SignIn.name,\n          component: SignIn,\n          options: function options(_ref2) {\n            var navigation = _ref2.navigation;\n            return {\n              title: \"Entrar\",\n              headerRight: function headerRight() {\n                return _jsx(Button, {\n                  type: \"clear\",\n                  onPress: function onPress() {\n                    return navigation.push(SignUp.name);\n                  },\n                  icon: _jsx(Icon, {\n                    name: \"add\",\n                    size: 25\n                  })\n                });\n              }\n            };\n          }\n        })]\n      })\n    })\n  });\n}\nvar screenOptions = {\n  headerStyle: {\n    backgroundColor: '#db4a39'\n  },\n  headerTintColor: '#fff'\n};","map":{"version":3,"sources":["/home/dan/danXCode/mobile/enxutank-mobile/App.js"],"names":["NavigationContainer","createNativeStackNavigator","Button","Icon","SignIn","SignUp","provider","props","ProviderComposer","providers","children","i","length","Provider","Stack","App","RedacaoProvider","TemaProvider","NivelEscolaridadeProvider","UserProvider","AuthProvider","screenOptions","name","title","navigation","headerRight","push","headerStyle","backgroundColor","headerTintColor"],"mappings":";;;;;;;AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,uBAA7B;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;;;AAEA,OAAO,IAAMC,QAAQ,GAAG,kBAACA,SAAD;AAAA,MAAWC,KAAX,uEAAmB,EAAnB;AAAA,SAA0B,CAACD,SAAD,EAAWC,KAAX,CAA1B;AAAA,CAAjB;AACP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA6B;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC3D,OAAK,IAAIC,CAAC,GAAGF,SAAS,CAACG,MAAV,GAAmB,CAAhC,EAAmCD,CAAC,IAAI,CAAxC,EAA2C,EAAEA,CAA7C,EAAgD;AAC9C,sCAA0BF,SAAS,CAACE,CAAD,CAAnC;AAAA,QAAOE,QAAP;AAAA,QAAiBN,KAAjB;;AACAG,IAAAA,QAAQ,GAAG,KAAC,QAAD,kCAAcH,KAAd;AAAA,gBAAsBG;AAAtB,OAAX;AACD;;AACD,SAAOA,QAAP;AACD,CANM;AAUP,IAAMI,KAAK,GAAGb,0BAA0B,EAAxC;AAEA,eAAe,SAASc,GAAT,GAAe;AAC5B,SACE,KAAC,gBAAD;AACE,IAAA,SAAS,EAAE,CACTT,QAAQ,CAACU,eAAD,CADC,EAETV,QAAQ,CAACW,YAAD,CAFC,EAGTX,QAAQ,CAACY,yBAAD,CAHC,EAITZ,QAAQ,CAACa,YAAD,CAJC,EAKTb,QAAQ,CAACc,YAAD,CALC,CADb;AAAA,cASE,KAAC,mBAAD;AAAA,gBACE,MAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAE,QAAnC;AAA6C,QAAA,aAAa,EAAEC,aAA5D;AAAA,mBACE,KAAC,KAAD,CAAO,MAAP;AACE,UAAA,IAAI,EAAEhB,MAAM,CAACiB,IADf;AAEE,UAAA,SAAS,EAAEjB,MAFb;AAGE,UAAA,OAAO,EAAE;AAAEkB,YAAAA,KAAK,EAAE;AAAT;AAHX,UADF,EAME,KAAC,KAAD,CAAO,MAAP;AACE,UAAA,IAAI,EAAEnB,MAAM,CAACkB,IADf;AAEE,UAAA,SAAS,EAAElB,MAFb;AAGE,UAAA,OAAO,EAAE,wBAAoB;AAAA,gBAAjBoB,UAAiB,SAAjBA,UAAiB;AAC3B,mBAAO;AACLD,cAAAA,KAAK,EAAE,QADF;AAELE,cAAAA,WAAW,EAAE;AAAA,uBAAO,KAAC,MAAD;AAClB,kBAAA,IAAI,EAAC,OADa;AAElB,kBAAA,OAAO,EAAE;AAAA,2BAAMD,UAAU,CAACE,IAAX,CAAgBrB,MAAM,CAACiB,IAAvB,CAAN;AAAA,mBAFS;AAGlB,kBAAA,IAAI,EAAE,KAAC,IAAD;AAAM,oBAAA,IAAI,EAAC,KAAX;AAAiB,oBAAA,IAAI,EAAE;AAAvB;AAHY,kBAAP;AAAA;AAFR,aAAP;AASD;AAbH,UANF;AAAA;AADF;AATF,IADF;AAqCD;AACD,IAAMD,aAAa,GAAG;AAAEM,EAAAA,WAAW,EAAE;AAAEC,IAAAA,eAAe,EAAE;AAAnB,GAAf;AAA+CC,EAAAA,eAAe,EAAE;AAAhE,CAAtB","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Icon } from 'react-native-elements';\nimport SignIn from './screens/user/SignIn';\nimport SignUp from './screens/user/SignUp';\n\nexport const provider = (provider, props = {}) => [provider, props];\nexport const ProviderComposer = ({ providers, children }) => {\n  for (let i = providers.length - 1; i >= 0; --i) {\n    const [Provider, props] = providers[i];\n    children = <Provider {...props}>{children}</Provider>\n  }\n  return children;\n}\n\n\n\nconst Stack = createNativeStackNavigator()\n\nexport default function App() {\n  return (\n    <ProviderComposer\n      providers={[\n        provider(RedacaoProvider),\n        provider(TemaProvider),\n        provider(NivelEscolaridadeProvider),\n        provider(UserProvider),\n        provider(AuthProvider)\n      ]}\n    >\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName={\"SignIn\"} screenOptions={screenOptions}>\n          <Stack.Screen\n            name={SignUp.name}\n            component={SignUp}\n            options={{ title: \"Registrar-se\" }}\n          />\n          <Stack.Screen\n            name={SignIn.name}\n            component={SignIn}\n            options={({ navigation }) => {\n              return {\n                title: \"Entrar\",\n                headerRight: () => (<Button\n                  type=\"clear\"\n                  onPress={() => navigation.push(SignUp.name)}\n                  icon={<Icon name=\"add\" size={25} />}\n                >\n                </Button>),\n              }\n            }\n            }\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </ProviderComposer>\n  );\n}\nconst screenOptions = { headerStyle: { backgroundColor: '#db4a39' }, headerTintColor: '#fff' }\n\n"]},"metadata":{},"sourceType":"module"}