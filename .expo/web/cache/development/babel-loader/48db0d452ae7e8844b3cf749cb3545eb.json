{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { Fragment, useState } from \"react\";\nimport * as authService from \"../../services/auth\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useForm } from \"react-hook-form\";\nimport InputValidated from \"../components/InputValidated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Fields = [{\n  name: 'email',\n  placeholder: 'Email',\n  rules: {\n    required: \"Este campo é requerido\"\n  },\n  styles: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  }\n}, {\n  name: 'password',\n  placeholder: 'Password',\n  rules: {\n    required: \"Este campo é requerido\",\n    pattern: {\n      value: /^(?=(.*[a-z]){1,})(?=(.*[A-Z]){1,})(?=(.*[0-9]){1,})(?=(.*[!@#$%^&*()\\-__+.]){1,}).{8,}$/,\n      message: \"Senha fraca\"\n    }\n  },\n  styles: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  secureTextEntry: true\n}, {\n  name: 'name',\n  placeholder: 'Nome',\n  rules: {\n    required: \"Este campo é requerido\"\n  },\n  styles: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  }\n}];\nexport default function SignUp() {\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      errors = _useForm.formState.errors;\n\n  var createUser = function createUser(data) {\n    var f = function f() {\n      var res, _errors;\n\n      return _regeneratorRuntime.async(function f$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(authService.createUser(data));\n\n            case 2:\n              res = _context.sent;\n\n              if (!res.errors) {\n                console.log(\"Usuário criado com sucesso\");\n              } else {\n                _errors = [];\n                Fields.map(function (field) {\n                  if (res.data[[field.name]]) _errors.push(JSON.stringify(res.data[[field.name]]));\n                });\n                console.log(_errors);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    f();\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(ImageBackground, {\n      style: styles.container,\n      source: require(\"../../assets/bg-images/main.jpg\"),\n      children: [Fields.map(function (field, key) {\n        return _jsxs(Fragment, {\n          children: [_jsx(View, {\n            style: styles.inputView,\n            children: _jsx(InputValidated, _objectSpread({}, _objectSpread({\n              errors: errors,\n              control: control\n            }, field)))\n          }, 'view-' + key), errors[[field.name]] && _jsx(Text, {\n            style: {\n              color: 'red',\n              marginBottom: 10\n            },\n            children: errors[[field.name]].message\n          }, 'error-' + key)]\n        }, key);\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: handleSubmit(createUser),\n        children: _jsx(Text, {\n          style: styles.loginText,\n          children: \"REGISTRAR-SE\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  image: {},\n  loginText: {\n    color: \"#fff\"\n  },\n  inputView: {\n    backgroundColor: \"#CCCCCB\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 10,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  forgot_button: {\n    height: 30,\n    marginBottom: 30\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#2BD4F1\",\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["/home/dan/danXCode/mobile/enxutank-mobile/screens/user/SignUp.js"],"names":["StatusBar","React","Fragment","useState","authService","useForm","InputValidated","Fields","name","placeholder","rules","required","styles","height","flex","padding","marginLeft","pattern","value","message","secureTextEntry","SignUp","handleSubmit","control","errors","formState","createUser","data","f","res","console","log","map","field","push","JSON","stringify","container","require","key","inputView","color","marginBottom","loginBtn","loginText","StyleSheet","create","backgroundColor","alignItems","justifyContent","width","image","borderRadius","TextInput","forgot_button","marginTop"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { Fragment, useState } from \"react\";\nimport * as authService from '../../services/auth'\nimport {\n    StyleSheet,\n    Text,\n    View,\n    TouchableOpacity,\n    ImageBackground,\n} from \"react-native\";\nimport { useForm } from \"react-hook-form\";\nimport InputValidated from \"../components/InputValidated\";\nconst Fields = [\n    {\n        name: 'email',\n        placeholder: 'Email',\n        rules: { required: \"Este campo é requerido\" },\n        styles: {\n            height: 50,\n            flex: 1,\n            padding: 10,\n            marginLeft: 20,\n        },\n    },\n    {\n        name: 'password',\n        placeholder: 'Password',\n        rules: {\n            required: \"Este campo é requerido\",\n            pattern: {\n                value: /^(?=(.*[a-z]){1,})(?=(.*[A-Z]){1,})(?=(.*[0-9]){1,})(?=(.*[!@#$%^&*()\\-__+.]){1,}).{8,}$/,\n                message: \"Senha fraca\"\n            }\n        },\n        styles: {\n            height: 50,\n            flex: 1,\n            padding: 10,\n            marginLeft: 20,\n        },\n        secureTextEntry: true,\n    },\n    {\n        name: 'name',\n        placeholder: 'Nome',\n        rules: { required: \"Este campo é requerido\" },\n        styles: {\n            height: 50,\n            flex: 1,\n            padding: 10,\n            marginLeft: 20,\n        },\n\n    }\n\n]\nexport default function SignUp() {\n    const { handleSubmit, control, formState: { errors } } = useForm();\n    const createUser = (data) => {\n        const f = async () => {\n            const res = await authService.createUser(data)\n            if (!res.errors) {\n                console.log(\"Usuário criado com sucesso\")\n            }\n            else {\n                let errors = []\n                Fields.map(field => {\n                    if (res.data[[field.name]])\n                        errors.push(JSON.stringify(res.data[[field.name]]))\n                })\n                console.log(errors)\n            }\n        }\n        f()\n    }\n\n    return (\n        <View style={styles.container}>\n            <StatusBar style=\"auto\" />\n            <ImageBackground style={styles.container}\n                source={require('../../assets/bg-images/main.jpg')}\n            >\n\n                {\n                    Fields.map((field, key) => {\n                        return <Fragment key={key}><View key={'view-' + key} style={styles.inputView}>\n                            <InputValidated {...{\n                                errors,\n                                control,\n                                ...field\n                            }} />\n                        </View>\n                            {errors[[field.name]] && <Text key={'error-' + key} style={{ color: 'red', marginBottom: 10 }}>{errors[[field.name]].message}</Text>\n                            }\n                        </Fragment>\n                    })\n                }\n\n                <TouchableOpacity style={styles.loginBtn} onPress={handleSubmit(createUser)}>\n                    <Text style={styles.loginText}>REGISTRAR-SE</Text>\n                </TouchableOpacity>\n            </ImageBackground>\n        </View >\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"#fff\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"100%\"\n    },\n\n    image: {\n\n    },\n\n    loginText: {\n        color: \"#fff\"\n    },\n    inputView: {\n        backgroundColor: \"#CCCCCB\",\n        borderRadius: 30,\n        width: \"70%\",\n        height: 45,\n        marginBottom: 10,\n\n        alignItems: \"center\",\n    },\n\n    TextInput: {\n        height: 50,\n        flex: 1,\n        padding: 10,\n        marginLeft: 20,\n    },\n\n    forgot_button: {\n        height: 30,\n        marginBottom: 30,\n    },\n\n    loginBtn: {\n        width: \"80%\",\n        borderRadius: 25,\n        height: 50,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: 40,\n        backgroundColor: \"#2BD4F1\",\n        color: \"#fff\"\n    },\n});"]},"metadata":{},"sourceType":"module"}