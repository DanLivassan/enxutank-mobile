{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Icon } from 'react-native-elements';\nimport { useAuth } from \"./context/auth.context\";\nimport SignIn from \"./screens/user/SignIn\";\nimport SignUp from \"./screens/user/SignUp\";\nimport Home from \"./screens/user/Home\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nvar AppAuth = function AppAuth() {\n  var _useAuth = useAuth(),\n      user = _useAuth.user,\n      token = _useAuth.token;\n\n  if (token) {\n    return _jsx(NavigationContainer, {\n      children: _jsx(Stack.Navigator, {\n        initialRouteName: Home.name,\n        screenOptions: screenOptions,\n        children: _jsx(Stack.Screen, {\n          name: Home.name,\n          component: Home,\n          options: {\n            title: \"Home\"\n          }\n        })\n      })\n    });\n  }\n\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: SignIn.name,\n      screenOptions: screenOptions,\n      children: [_jsx(Stack.Screen, {\n        name: SignUp.name,\n        component: SignUp,\n        options: {\n          title: \"Registrar-se\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: SignIn.name,\n        component: SignIn,\n        options: function options(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            title: \"Entrar\",\n            headerRight: function headerRight() {\n              return _jsx(Button, {\n                type: \"clear\",\n                onPress: function onPress() {\n                  return navigation.push(SignUp.name);\n                },\n                icon: _jsx(Icon, {\n                  name: \"add\",\n                  size: 25\n                })\n              });\n            }\n          };\n        }\n      })]\n    })\n  });\n};\n\nvar screenOptions = {\n  headerStyle: {\n    backgroundColor: '#db4a39'\n  },\n  headerTintColor: '#fff'\n};\nexport default AppAuth;","map":{"version":3,"sources":["/home/dan/danXCode/mobile/enxutank-mobile/AppAuth.js"],"names":["React","NavigationContainer","createNativeStackNavigator","Button","Icon","useAuth","SignIn","SignUp","Home","Stack","AppAuth","user","token","name","screenOptions","title","navigation","headerRight","push","headerStyle","backgroundColor","headerTintColor"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,uBAA7B;AACA,SAASC,OAAT;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;;;AACA,IAAMC,KAAK,GAAGP,0BAA0B,EAAxC;;AACA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,iBAAwBL,OAAO,EAA/B;AAAA,MAAQM,IAAR,YAAQA,IAAR;AAAA,MAAcC,KAAd,YAAcA,KAAd;;AACA,MAAIA,KAAJ,EAAW;AACP,WACI,KAAC,mBAAD;AAAA,gBACI,KAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAEJ,IAAI,CAACK,IAAxC;AAA8C,QAAA,aAAa,EAAEC,aAA7D;AAAA,kBACI,KAAC,KAAD,CAAO,MAAP;AACI,UAAA,IAAI,EAAEN,IAAI,CAACK,IADf;AAEI,UAAA,SAAS,EAAEL,IAFf;AAGI,UAAA,OAAO,EAAE;AAAEO,YAAAA,KAAK,EAAE;AAAT;AAHb;AADJ;AADJ,MADJ;AAYH;;AACD,SACI,KAAC,mBAAD;AAAA,cACI,MAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAET,MAAM,CAACO,IAA1C;AAAgD,MAAA,aAAa,EAAEC,aAA/D;AAAA,iBACI,KAAC,KAAD,CAAO,MAAP;AACI,QAAA,IAAI,EAAEP,MAAM,CAACM,IADjB;AAEI,QAAA,SAAS,EAAEN,MAFf;AAGI,QAAA,OAAO,EAAE;AAAEQ,UAAAA,KAAK,EAAE;AAAT;AAHb,QADJ,EAMI,KAAC,KAAD,CAAO,MAAP;AACI,QAAA,IAAI,EAAET,MAAM,CAACO,IADjB;AAEI,QAAA,SAAS,EAAEP,MAFf;AAGI,QAAA,OAAO,EAAE,uBAAoB;AAAA,cAAjBU,UAAiB,QAAjBA,UAAiB;AACzB,iBAAO;AACHD,YAAAA,KAAK,EAAE,QADJ;AAEHE,YAAAA,WAAW,EAAE;AAAA,qBAAO,KAAC,MAAD;AAChB,gBAAA,IAAI,EAAC,OADW;AAEhB,gBAAA,OAAO,EAAE;AAAA,yBAAMD,UAAU,CAACE,IAAX,CAAgBX,MAAM,CAACM,IAAvB,CAAN;AAAA,iBAFO;AAGhB,gBAAA,IAAI,EAAE,KAAC,IAAD;AAAM,kBAAA,IAAI,EAAC,KAAX;AAAiB,kBAAA,IAAI,EAAE;AAAvB;AAHU,gBAAP;AAAA;AAFV,WAAP;AASH;AAbL,QANJ;AAAA;AADJ,IADJ;AA2BH,CA3CD;;AA4CA,IAAMC,aAAa,GAAG;AAAEK,EAAAA,WAAW,EAAE;AAAEC,IAAAA,eAAe,EAAE;AAAnB,GAAf;AAA+CC,EAAAA,eAAe,EAAE;AAAhE,CAAtB;AACA,eAAeX,OAAf","sourcesContent":["import React from 'react'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Icon } from 'react-native-elements';\nimport { useAuth } from './context/auth.context';\nimport SignIn from './screens/user/SignIn';\nimport SignUp from './screens/user/SignUp';\nimport Home from './screens/user/Home';\nconst Stack = createNativeStackNavigator()\nconst AppAuth = () => {\n    const { user, token } = useAuth();\n    if (token) {\n        return (\n            <NavigationContainer>\n                <Stack.Navigator initialRouteName={Home.name} screenOptions={screenOptions}>\n                    <Stack.Screen\n                        name={Home.name}\n                        component={Home}\n                        options={{ title: \"Home\" }}\n                    />\n\n                </Stack.Navigator>\n            </NavigationContainer>\n        )\n    }\n    return (\n        <NavigationContainer>\n            <Stack.Navigator initialRouteName={SignIn.name} screenOptions={screenOptions}>\n                <Stack.Screen\n                    name={SignUp.name}\n                    component={SignUp}\n                    options={{ title: \"Registrar-se\" }}\n                />\n                <Stack.Screen\n                    name={SignIn.name}\n                    component={SignIn}\n                    options={({ navigation }) => {\n                        return {\n                            title: \"Entrar\",\n                            headerRight: () => (<Button\n                                type=\"clear\"\n                                onPress={() => navigation.push(SignUp.name)}\n                                icon={<Icon name=\"add\" size={25} />}\n                            >\n                            </Button>),\n                        }\n                    }\n                    }\n                />\n            </Stack.Navigator>\n        </NavigationContainer>\n    )\n}\nconst screenOptions = { headerStyle: { backgroundColor: '#db4a39' }, headerTintColor: '#fff' }\nexport default AppAuth\n"]},"metadata":{},"sourceType":"module"}